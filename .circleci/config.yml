version: 2.1
orbs:
  node: circleci/node@4.1.0
jobs:
  lint:
    executor:
      name: node/default
      tag: "14.15"
    steps:
      - checkout
      - node/install-packages
      - run: npm run lint
  test-unit:
    executor:
      name: node/default
      tag: "14.15"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker run --name=dynamodb -d -p 8000:8000 amazon/dynamodb-local
      - node/install-packages
      - run: docker run --rm --mount src=/home/circleci/project,dst=/home/circleci/project,type=bind cimg/node:14.15 npm run test
  build:
    executor:
      name: node/default
      tag: "14.15"
    steps:
      - checkout
      - node/install-packages
      - run: npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - "*"
  test-e2e:
    executor:
      name: node/default
      tag: "14.15"
    working_directory: ~/e2e
    steps:
      - attach_workspace:
          at: ~/east-dynamodb
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker run -d -p 8000:8000 amazon/dynamodb-local
      - run:
          name: Install AWS CLI
          working_directory: /tmp
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Create database
          command: |
            docker run --rm -it --network container:suspicious_goldberg \
              --env AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE \
              --env AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY \
              --env AWS_DEFAULT_REGION=ddblocal \
              amazon/aws-cli dynamodb create-table \
                --table-name east-dynamodb-test \
                --attribute-definitions AttributeName=PK,AttributeType=S \
                --key-schema AttributeName=PK,KeyType=HASH \
                --billing-mode PAY_PER_REQUEST \
                --endpoint-url http://localhost:8000
      - run: cd ~/east-dynamodb && npm link
      - run: npm init -y
      - run: "npm install 'east' '@aws-sdk/client-dynamodb@^3.3.0' '@aws-sdk/util-dynamodb@^3.3.0'"
      - run: npm link east-dynamodb
      - run: cp ~/east-dynamodb/.circleci/.eastrc ./.eastrc && cp -R ~/east-dynamodb/.circleci/tests/migrations_default ./migrations
      - run: npx east migrate
      - run: npx east rollback
workflows:
  workflow:
    jobs:
      - lint
      - test-unit
      - build:
          requires:
            - lint
            - test-unit
      - test-e2e:
          requires:
            - build
